react 기본
Component Based Development
Component 단위로 개발

컴포넌트는 독립적인 단위의 소프트웨어 모듈을 말한다. 
즉 소프트웨어를 독립적인 하나의 부품으로 만드는 방법이다. 
리액트는 웹에서 쓰는 각 요소들을 컴포넌트로 만들 수 있게 해 기존의 UI를 다른 화면에서 다시 쓰거나, 
다른 프로젝트에서 다시 쓸 수 있도록 하는 장점(높은 재사용성)을 가진다.

- 독립적인 코드 블럭(HTML + CSS + Javascript)
- 중복되는 키워드를 하나의 컴포넌트로 표현하고 싶다.(이것을 이룬게 react이다.)
- 작업의 단위 = 컴포넌트

Virtual DOM
virtual DOM : 가상 돔

가짜 돔 : 어딘가에 데이터로만 존재하는 것(눈에 보이지 않는다.) 하는 역할이 뭐냐 하면 가상의 트리 구조를 만들고 이를 실제로 브라우저에 그리는게 react

정리하자면 우리가 가짜 돔을 만들고 이를 실제로 브라우저에 그리도록 도와주는 것이 바로 react이다.

진짜 돔 : (개발자 도구로 찍히는) 눈에 보이는 것들


JSX
JSX는 자바스크립트를 확장한 문법이다. = 자바스크립트이다.

- JSX는 템플릿 문자열이 아니라 자바스크립트로 변환되는 코드이다.(babel 혹은 타입스크립트가 변환을 해준다.) 
- 템플릿은 html로 변환된다. 타입스크립트와 리액트가 잘맞는 이유는 JSX와의 호환이 잘되기 때문이다. 
- JSX는 자바스크립트의 확장이기 떄문에 문자열을 타입스크립트에 매칭하는 것보다 자바스크립트의 문법을 타입스크립트에 매칭하는게 연역적으로 추론이 가능하다. 
- 문자열을 해석해서 문제가 있는지 확인하는 것은 귀납적으로 진행된다.

CSR VS SSR
CSR(Client Side Rendering)
- JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행되기 전까지는 화면이 보이지 않는다.
- JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행된 후, 화면이 보이면서 유저가 인터렉션이 가능한다.

SSR(Server Side Rendering)
- JS가 전부 다운로드 되지 않아도, 일단 화면은 보이지만 유저가 사용할 수 없다.
- JS가 전부 다운로드 되어 리액트 애플리케이션이 정상 실행된 후, 유저가 사용가능하다.
